package com.st.mcu.stm32list;

import java.util.ArrayList;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.Messenger;
import android.os.RemoteException;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.Toast;

public class STM32ListActivity extends Activity {
    private static final String TAG = "STM32ListActivity class";

    private static DeviceList devList;
    
    /** Target we publish for clients to send messages to IncomingHandler. */
    final Handler myHandler = new IncomingHandler();
    final Messenger mMessenger = new Messenger(myHandler);
    
    private static ArrayList<String> familyList;
    private static int selectedFamily = 0;
    
    /** Handler of incoming messages from service. */
    static class IncomingHandler extends Handler {
        @Override
        public void handleMessage(Message msg) {
            switch (msg.what) {
            case DBdefine.MSG.MSG_TASK_LIST_FAMILIES:
            	Log.i(TAG, "DBdefine.MSG_TASK_LIST_FAMILIES received.");
            	Log.i(TAG, Thread.currentThread().getName() + " is trigging.");
        		familyList = (ArrayList<String>) msg.obj;
        		break;
            case DBdefine.MSG.MSG_INIT_DATABASE:
            	startActivity();
            	break;
            default:
            	super.handleMessage(msg);
            }
        }
    }
    
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_stm32_list);

		// Initialize the database in the background
		new Thread(new Runnable() {
			@Override
			public void run() {
				// It is a lengthy procedure of loading database in the first time.
			    devList = new DeviceList(STM32ListActivity.this);
			    new Thread(devList).start();

				try {
					mMessenger.send(Message.obtain(null, DBdefine.MSG.MSG_INIT_DATABASE, 0, 0, null));
				} catch (RemoteException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}
		}).start();
	}

	class browseListener implements View.OnClickListener {
		@Override
		public void onClick(View v) {
			familyList = new ArrayList<String>();
			ArrayList<Integer> countList = new ArrayList<Integer>();
			try {
				DeviceList.addTask(DBdefine.MSG.MSG_TASK_LIST_FAMILIES, mMessenger, true, familyList, countList);
			} catch (InterruptedException e) {
				Toast.makeText(STM32ListActivity.this, "Can not get data from the database.", Toast.LENGTH_LONG);
				return;
			//	e.printStackTrace();
			}

			int nFamily = familyList.size();
			final String[] families = new String[nFamily];
			familyList.toArray(families);
			String[] showList = new String[nFamily];
			for (int ifm=0; ifm < nFamily; ifm++) {
				showList[ifm] = familyList.get(ifm) + " (" + countList.get(ifm) + ")";
			}
			AlertDialog.Builder familyDlg = new AlertDialog.Builder(STM32ListActivity.this);
			familyDlg.setTitle("Select a family");
			familyDlg.setSingleChoiceItems(showList, selectedFamily, new DialogInterface.OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
					selectedFamily = which;
				}
			});
			familyDlg.setPositiveButton("OK", new OnClickListener() {
				@Override
				public void onClick(DialogInterface dialog, int which) {
		            Intent intent = new Intent(STM32ListActivity.this, ChartActivity.class);
		            Bundle bundle = new Bundle();
		            if (families[selectedFamily].equals("All families"))
		            	bundle.putString("Family", "*");
		            else
		            	bundle.putString("Family", (String) families[selectedFamily]);
		            intent.putExtras(bundle);
		            startActivity(intent);
				}
			});
			familyDlg.create().show();
		}
	}
	
	private void startActivity() {
	    findViewById(R.id.loading_progress).setVisibility(View.GONE);
	    findViewById(R.id.loading_text).setVisibility(View.GONE);
	    
	    Button btn = (Button)findViewById(R.id.browsing);
	    btn.setVisibility(View.VISIBLE);
	    btn.setOnClickListener(new browseListener());
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.stm32_list, menu);
		return true;
	}

}
